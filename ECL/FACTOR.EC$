	JMP L000001
	SIGNATURE 'FACTORIALPROGRAM'
S000000
	ENTER 0,1,L000002
	PUSHS 'PI x 10**4 = '
	SVC  2
	SVC  4
	SVC  1
	SVC  3
	LEAVE
L000002 EQU 0
S000001
	ENTER 1,1,L000003
	PUSHR 1,-1
	PUSHI 1
	CMPLE
	JZ L000004
	PUSHI 1
	STORE 1,5
	JMP L000005
L000004
	PUSHR 1,-1
	PUSHI 1
	SUB
	CALL S000001
	PUSHR 1,-1
	MUL
	STORE 1,5
L000005
	LEAVEF
L000003 EQU 0
INIT_CLASS
	ENTER 0,1,L000006
	SVC  3
	PUSHS 'Init section called'
	SVC  2
	SVC  3
	LEAVE
L000006 EQU 0
TIMER_CLASS
	ENTER 0,1,L000007
	SVC  3
	PUSHS 'Timer section called'
	SVC  2
	SVC  3
	LEAVE
L000007 EQU 0
CONTROL_CLASS
	ENTER 0,1,L000008
	SVC  3
	PUSHS 'Control section called'
	SVC  2
	SVC  3
	LEAVE
L000008 EQU 0
CLASS_AB
	ENTER 0,1,L000009
	JMP L000010
S000002
	ENTER 1,2,L000011
	PUSHS 'level2: '
	SVC  2
	PUSHN 2,-1
	SVC  1
	SVC  3
	PUSHN 2,-1
	PUSHI 2
	MUL
	STOREN 2,-1
	PUSHS 'level2: '
	SVC  2
	PUSHN 2,-1
	SVC  1
	SVC  3
	LEAVE
L000011 EQU 0
S000003
	ENTER 1,2,L000012
	PUSHR 2,-1
	CALL S000002
	LEAVE
L000012 EQU 0
L000010
	PUSHR 0,-3
	SVC  1
	PUSHS ' is EClass value'
	SVC  2
	SVC  3
	PUSHR 0,-2
	SVC  1
	PUSHS ' is EAddr value'
	SVC  2
	SVC  3
	PUSHR 0,-1
	SVC  1
	PUSHS ' is EValue value'
	SVC  2
	SVC  3
	PUSHR 0,-2
	PUSHI 1234
	CMPEQ
	JZ L000013
	PUSHR 0,-1
	STORE 1,6
	PUSHS 'Let's test recursion and looping'
	SVC  2
	SVC  3
	PUSHS '---------------------'
	SVC  2
	SVC  3
	PUSHI 1
	STORE 1,7
	JMP L000014
L000015
	PUSHR 1,7
	INC 1,7
	PUSHR 1,6
	CJE L000016
L000014
	PUSHR 1,7
	SVC  1
	PUSHS ' Factorial = '
	SVC  2
	PUSHR 1,7
	CALL S000001
	SVC  1
	SVC  3
	PUSHS '---------------------'
	SVC  2
	SVC  3
	JMP L000015
L000016
	PUSHS 'Now let's test an intrinsic function: pi'
	SVC  2
	SVC  3
	CALL S000000
	PUSHI 1
	RANGE 2
	DUPE
	PUSHI 9
	STOREX 1,18
	JMP L000017
L000018
	DUPE
	PDECX 1,18
	PUSHI 0
	CJE L000019
L000017
	PUSHI 1
	RANGE 2
	PUSHX 1,18
	RANGE 10
	PUSHI 1
	RANGE 2
	PUSHX 1,18
	STOREX 1,8
	PUSHS 'testarr[arindx[1]] is '
	SVC  2
	PUSHI 1
	RANGE 2
	PUSHX 1,18
	RANGE 10
	PUSHX 1,8
	SVC  1
	SVC  3
	JMP L000018
L000019
	PURGE
	PUSHI 333
	STORE 1,7
	PUSHA 1,7
	CALL S000003
	PUSHI 10
	PUSHI 1
	SUB
	RANGE 10
	PUSHI 333
	STOREX 1,8
	PUSHI 9
	RANGE 10
	PUSHAX 1,8
	CALL S000003
	PUSHS 'testarr[10-1] = '
	SVC  2
	PUSHI 10
	PUSHI 1
	SUB
	RANGE 10
	PUSHX 1,8
	SVC  1
	SVC  3
	PUSHS 'Global before increment: '
	SVC  2
	PUSHR 0,6
	SVC  1
	SVC  3
	PUSHA 0,6
	PUSHI 50
	SVC  5
	PUSHS 'Global after increment:  '
	SVC  2
	PUSHR 0,6
	SVC  1
	SVC  3
	PUSHS 'Global array before increment: '
	SVC  2
	PUSHI 2
	RANGE 3
	PUSHX 0,7
	SVC  1
	SVC  3
	PUSHI 2
	RANGE 3
	PUSHAX 0,7
	PUSHI 6
	SVC  5
	PUSHS 'Global array after increment:  '
	SVC  2
	PUSHI 2
	RANGE 3
	PUSHX 0,7
	SVC  1
	SVC  3
L000013
	LEAVE
L000009 EQU 14
L000001
	INIT 2
	ENTER 3,0,4
	PUSHI -1
	PUSHR 0,-3
	PUSHI 1
	CJE TIMER_CLASS
	PUSHR 0,-3
	PUSHI 2
	CJE CONTROL_CLASS
	PUSHR 0,-3
	PUSHI 16706
	CJE CLASS_AB
	PUSHR 0,-3
	PUSHI 0
	CJE INIT_CLASS
	JMP -1
	END
